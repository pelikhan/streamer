{"version":3,"sources":["Scene.tsx","Source.tsx","VideoInputSource.tsx","Toolbox.tsx","BrowserSource.tsx","MakeCodeEditor.tsx","Settings.tsx","Chat.tsx","Paint.tsx","App.tsx","Hooks.tsx","serviceWorker.ts","index.tsx"],"names":["Scene","props","state","children","className","scene","hardware","chat","paint","multi","Source","id","hidden","listCameras","a","navigator","mediaDevices","enumerateDevices","cams","filter","d","kind","stopStream","el","srcObject","tracks","getVideoTracks","stop","e","deviceId","console","log","constraints","audio","video","aspectRatio","getUserMedia","stream","volume","onloadedmetadata","play","VideoInputSelect","current","action","dispatch","useAsync","promiseFn","data","isPending","options","key","text","forEach","cam","push","label","Dropdown","onChange","event","item","type","selectedKey","VideoInputSource","rotate","useState","videoDeviceId","setVideoDeviceId","videoRef","React","useRef","useEffect","startStream","then","catch","message","ref","Toolbox","IconButton","icon","title","active","handler","onClick","Icon","iconName","PaintButton","emoji","paintTool","tool","AppActionType","SET_PAINT_TOOL","SceneButton","SET_SCENE","emojis","i","length","substr","map","SET_PAINT","on","hardwareCamId","SET_HARDWARECAM","mixer","twitch","SET_CHAT","SET_SETTINGS","BrowserSource","frame","url","sandbox","dataKind","data-kind","src","allow","useEditorConfigs","useFetch","headers","accept","editorConfigs","error","SelectMakeCodeEditor","editor","name","select","SET_EDITOR","MakeCodeEditor","editorConfig","Settings","Button","Field","DispatchCheckbox","checked","SET_MULTI","Label","faceCamId","SET_FACECAM_ID","SET_HARDWARECAM_ID","DispatchText","placeholder","SET_EMOJIS","SET_MIXER","SET_TWITCH","TextField","newValue","value","Checkbox","Chat","undefined","window","location","host","Paint","painttool","paintCtx","painttoolCtx","paintRef","paintToolRef","mouse","x","y","head","getContext","onPaint","ctx","clearRect","width","height","save","p1","p2","size","lineWidth","dx","dy","len","Math","sqrt","translate","atan2","beginPath","moveTo","lineTo","closePath","stroke","rect","max","PI","font","textAlign","fillText","restore","addEventListener","updateSize","pageX","this","offsetLeft","pageY","offsetTop","lineJoin","lineCap","strokeStyle","drawImage","removeEventListener","loadPaint","init","getBoundingClientRect","useConfig","initialValue","localStorage","getItem","JSON","parse","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","App","config","setConfig","useReducer","newState","cloneState","settings","findCamera","initializeIcons","onmessage","msg","source","broadcast","outer","frames","document","querySelectorAll","ifrm","contentWindow","postMessage","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c454883d.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\nimport { AppState } from \"./App\";\r\n\r\nexport default function Scene(props: {\r\n  state: AppState;\r\n  children?: ReactNode;\r\n}) {\r\n  const { state, children } = props;\r\n  return (\r\n    <div\r\n      className={`${state.scene}scene ${state.hardware ? \"hardware\" : \"\"} ${\r\n        state.chat && !state.hardware ? \"chat\" : \"\"\r\n      } ${state.paint ? \"paint\" : \"\"} ${state.multi ? \"multi\" : \"\"}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\n\r\nexport interface SourceProps {\r\n  id: string;\r\n  hidden?: boolean;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport default function Source(props: SourceProps) {\r\n  const { children, id, hidden } = props;\r\n  return (\r\n    <div id={id} className={`source ${hidden ? \"hidden\" : \"\"}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, Dispatch } from \"react\";\r\nimport Source from \"./Source\";\r\nimport { useAsync } from \"react-async\";\r\nimport { AppAction, AppActionType, SetCameraDeviceIdAppAction } from \"./App\";\r\nimport { Dropdown, IDropdownOption } from \"@fluentui/react\";\r\n\r\nexport async function listCameras() {\r\n  let cams = await navigator.mediaDevices.enumerateDevices();\r\n  cams = cams.filter((d) => d.kind === \"videoinput\");\r\n  return cams;\r\n}\r\n\r\nfunction stopStream(el: HTMLVideoElement) {\r\n  try {\r\n    if (el.srcObject) {\r\n      const tracks = (el.srcObject as MediaStream).getVideoTracks();\r\n      if (tracks && tracks[0] && tracks[0].stop) tracks[0].stop();\r\n    }\r\n    el.srcObject = null;\r\n  } catch (e) {}\r\n}\r\n\r\nasync function startStream(el: HTMLVideoElement, deviceId?: string) {\r\n  stopStream(el);\r\n  console.log(`trying webcam ${deviceId}`);\r\n  const constraints: any = {\r\n    audio: false,\r\n    video: {\r\n      aspectRatio: 4 / 3,\r\n    },\r\n  };\r\n  if (deviceId) constraints.video.deviceId = deviceId;\r\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n  el.volume = 0; // don't use sound!\r\n  el.srcObject = stream;\r\n  el.onloadedmetadata = (e) => {\r\n    console.log(`start webcam ${deviceId}`);\r\n    el.play();\r\n  };\r\n}\r\n\r\nexport function VideoInputSelect(props: {\r\n  current?: string;\r\n  action: AppActionType.SET_FACECAM_ID | AppActionType.SET_HARDWARECAM_ID;\r\n  dispatch: Dispatch<AppAction>;\r\n}) {\r\n  const { current, action, dispatch } = props;\r\n  const { data, isPending } = useAsync({ promiseFn: listCameras });\r\n\r\n  const options = [{ key: \"\", text: \"Off\" }];\r\n  if (data)\r\n    data.forEach((cam) =>\r\n      options.push({\r\n        key: cam.deviceId,\r\n        text: cam.label || `camera ${cam.deviceId}`,\r\n      })\r\n    );\r\n\r\n  const onChange = (\r\n    event: React.FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ): void => {\r\n    dispatch({\r\n      type: action,\r\n      deviceId: item?.key,\r\n    } as SetCameraDeviceIdAppAction);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      className={isPending ? \"loading\" : \"\"}\r\n      options={options}\r\n      onChange={onChange}\r\n      selectedKey={current}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function VideoInputSource(props: {\r\n  id: string;\r\n  deviceId?: string;\r\n  rotate?: boolean;\r\n}) {\r\n  const { id, deviceId, rotate } = props;\r\n  const [videoDeviceId, setVideoDeviceId] = useState<string | undefined>(\"\");\r\n  const videoRef = React.useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n    if (video.srcObject && videoDeviceId === deviceId) return;\r\n    startStream(video, deviceId)\r\n      .then(() => {\r\n        setVideoDeviceId(deviceId);\r\n      })\r\n      .catch((e) => {\r\n        console.log(`error: ${e.message}`);\r\n        stopStream(video);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <Source id={id}>\r\n      <video className={rotate ? \"rotate\" : \"\"} ref={videoRef} />\r\n    </Source>\r\n  );\r\n}\r\n","import React, { Dispatch } from \"react\";\r\nimport {\r\n  AppAction,\r\n  AppActionType,\r\n  SetSceneAppAction,\r\n  AppState,\r\n  SetFlagAppAction,\r\n  SetPaintToolAppAction,\r\n} from \"./App\";\r\nimport { Icon } from \"@fluentui/react\";\r\n\r\nexport default function Toolbox(props: {\r\n  state: AppState;\r\n  dispatch: Dispatch<AppAction>;\r\n}) {\r\n  const { state, dispatch } = props;\r\n\r\n  function IconButton(props: {\r\n    icon?: string;\r\n    text?: string;\r\n    title: string;\r\n    active?: boolean;\r\n    handler: () => void;\r\n  }) {\r\n    const { icon, title, active, handler, text } = props;\r\n    return (\r\n      <button\r\n        className={`${active ? \"active\" : \"\"}`}\r\n        title={title}\r\n        onClick={handler}\r\n      >\r\n        {!!icon && <Icon iconName={icon} />}\r\n        {text || \"\"}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  function PaintButton(props: {\r\n    icon?: string;\r\n    title: string;\r\n    tool: string;\r\n    emoji?: string;\r\n  }) {\r\n    return (\r\n      <IconButton\r\n        icon={props.icon}\r\n        title={props.title}\r\n        text={props.emoji}\r\n        active={\r\n          state.paintTool === \"emoji\" && props.emoji\r\n            ? props.emoji === state.emoji\r\n            : props.tool === state.paintTool\r\n        }\r\n        handler={() =>\r\n          dispatch({\r\n            type: AppActionType.SET_PAINT_TOOL,\r\n            tool: props.tool,\r\n            emoji: props.emoji,\r\n          } as SetPaintToolAppAction)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function SceneButton(props: { icon: string; title: string; scene: string }) {\r\n    const { icon, title, scene } = props;\r\n    return (\r\n      <IconButton\r\n        icon={icon}\r\n        title={title}\r\n        active={state.scene === scene}\r\n        handler={() =>\r\n          dispatch({\r\n            type: AppActionType.SET_SCENE,\r\n            scene,\r\n          } as SetSceneAppAction)\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  if (state.paint) {\r\n    const emojis = [];\r\n    if (state.emojis)\r\n      for (let i = 0; i < state.emojis.length; i += 2)\r\n        emojis[i >> 1] = state.emojis.substr(i, 2);\r\n    return (\r\n      <div id=\"toolbox\">\r\n        <PaintButton icon=\"ArrowTallUpLeft\" title=\"Draw arrow\" tool={\"arrow\"} />\r\n        <PaintButton\r\n          icon=\"RectangleShape\"\r\n          title=\"Draw rectangle\"\r\n          tool={\"rect\"}\r\n        />\r\n        <PaintButton icon=\"PenWorkspace\" title=\"Draw freeform\" tool={\"pen\"} />\r\n        {emojis.map((emoji) => (\r\n          <PaintButton emoji={emoji} tool={\"emoji\"} title={\"Stamp \" + emoji} />\r\n        ))}\r\n        <IconButton\r\n          icon=\"ChromeClose\"\r\n          title=\"Edit Paint mode\"\r\n          handler={() =>\r\n            dispatch({\r\n              type: AppActionType.SET_PAINT,\r\n              on: false,\r\n            } as SetFlagAppAction)\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"toolbox\">\r\n      <SceneButton icon=\"OpenPane\" title=\"move webcam left\" scene={\"left\"} />\r\n      <SceneButton\r\n        icon=\"OpenPaneMirrored\"\r\n        title=\"move webcam right\"\r\n        scene={\"right\"}\r\n      />\r\n      <SceneButton icon=\"Contact\" title=\"webcam large\" scene={\"chat\"} />\r\n      {state.hardwareCamId && (\r\n        <IconButton\r\n          icon=\"Robot\"\r\n          title=\"hardware webcam\"\r\n          handler={() =>\r\n            dispatch({\r\n              type: AppActionType.SET_HARDWARECAM,\r\n              on: !state.hardware,\r\n            } as SetFlagAppAction)\r\n          }\r\n          active={state.hardware}\r\n        />\r\n      )}\r\n      {(state.mixer || state.twitch) && (\r\n        <IconButton\r\n          icon=\"OfficeChat\"\r\n          title=\"show/hide chat\"\r\n          handler={() =>\r\n            dispatch({\r\n              type: AppActionType.SET_CHAT,\r\n              on: !state.chat,\r\n            } as SetFlagAppAction)\r\n          }\r\n          active={state.chat}\r\n        />\r\n      )}\r\n      <IconButton\r\n        icon=\"PenWorkspace\"\r\n        title=\"Paint mode\"\r\n        handler={() =>\r\n          dispatch({\r\n            type: AppActionType.SET_PAINT,\r\n            on: true,\r\n          } as SetFlagAppAction)\r\n        }\r\n      />\r\n      <IconButton\r\n        icon=\"Settings\"\r\n        title=\"show settings\"\r\n        handler={() =>\r\n          dispatch({\r\n            type: AppActionType.SET_SETTINGS,\r\n            on: true,\r\n          } as SetFlagAppAction)\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n        const emojis = [];\r\n        if (config.emojis)\r\n            for(let i =0; i < config.emojis.length;i += 2)\r\n                emojis[i >> 1] = config.emojis.substr(i, 2);\r\n        if (state.paint) {\r\n            addPaintButton(\"ArrowTallUpLeft\", \"Draw arrow\", \"arrow\")\r\n            addPaintButton(\"RectangleShape\", \"Draw rectangle\", \"rect\")\r\n            addPaintButton(\"PenWorkspace\", \"Draw freeform\", \"pen\")\r\n            addButton(\"WhiteBoardApp16\", \"Paint screen in white\", whiteboard)\r\n            emojis.forEach(emoji => {\r\n                const btn = document.createElement(\"button\")\r\n                btn.innerText = emoji;\r\n                btn.addEventListener(\"pointerdown\", function(e) {\r\n                    tickEvent(\"streamer.emoji\", { emoji }, { interactiveConsent: true })\r\n                    state.emoji = emoji;\r\n                    setPaintTool(\"emoji\")\r\n                }, false)\r\n                toolbox.append(btn)\r\n            })\r\n            addButton(\"EraseTool\", \"Clear all drawings\", clearPaint)\r\n            addButton(\"ChromeClose\", \"Exit paint mode\", togglePaint)\r\n        } else {\r\n            addButton(\"OpenPane\", \"move webcam left\", () => setScene(\"left\"))\r\n            addButton(\"OpenPaneMirrored\", \"move webcam right\", () => setScene(\"right\"))\r\n            addButton(\"Contact\", \"webcam large\", () => setScene(\"chat\"))\r\n            if (config.hardwareCamId)\r\n            addButton(\"Robot\", \"hardware webcam\", toggleHardware)\r\n            if (config.mixer || config.twitch)\r\n                addButton(\"OfficeChat\", \"show/hide chat\", toggleChat)\r\n            addButton(\"PenWorkspace\", \"Paint mode\", togglePaint)\r\n            addButton(\"Settings\", \"Show settings\", showSettings);\r\n        }\r\n\r\n        function addButton(icon, title, handler) {\r\n            const btn = document.createElement(\"button\")\r\n            btn.title = title\r\n            btn.addEventListener(\"pointerdown\", function(e) {\r\n                tickEvent(\"streamer.button\", { button: icon }, { interactiveConsent: true })\r\n                handler(e)\r\n            }, false)\r\n            const i = document.createElement(\"i\")\r\n            btn.append(i)\r\n            i.className = `ms-Icon ms-Icon--${icon}`\r\n            toolbox.append(btn)\r\n            return btn;\r\n        }\r\n\r\n        function addPaintButton(icon, title, tool) {\r\n            const btn = addButton(icon, title, () => setPaintTool(tool));\r\n            if (state.painttool == tool)\r\n                btn.classList.add(\"active\")\r\n        }\r\n\r\n        function setScene(scene) {\r\n            tickEvent(\"streamer.scene\", { scene: scene }, { interactiveConsent: true });\r\n            state.sceneIndex = scenes.indexOf(`${scene}scene`);\r\n            render();\r\n        }\r\n    }\r\n}\r\n*/\r\n","import React from \"react\";\r\nimport Source from \"./Source\";\r\n\r\nexport interface BrowserSourceProps {\r\n  id: string;\r\n  hidden?: boolean;\r\n  url?: string;\r\n  title?: string;\r\n  sandbox?: boolean;\r\n  dataKind?: string;\r\n}\r\n\r\nexport default function BrowserSource(props: BrowserSourceProps) {\r\n  const { id, url, title, sandbox, hidden, dataKind } = props;\r\n  let frame: JSX.Element;\r\n  if (sandbox)\r\n    frame = (\r\n      <iframe\r\n        data-kind={dataKind}\r\n        title={title}\r\n        src={url}\r\n        sandbox={\"allow-scripts allow-same-origin\"}\r\n      />\r\n    );\r\n  else\r\n    frame = (\r\n      <iframe\r\n        data-kind={dataKind}\r\n        title={title}\r\n        src={url}\r\n        allow={\"usb;camera\"}\r\n      />\r\n    );\r\n  return (\r\n    <Source id={id} hidden={hidden}>\r\n      {frame}\r\n    </Source>\r\n  );\r\n}\r\n","import React, { Dispatch, FormEvent } from \"react\";\r\nimport BrowserSource from \"./BrowserSource\";\r\nimport { useFetch } from \"react-async\";\r\nimport {\r\n  EditorConfig,\r\n  AppAction,\r\n  AppActionType,\r\n  SetEditorAppAction,\r\n} from \"./App\";\r\nimport { Dropdown, IDropdownOption } from \"@fluentui/react\";\r\n\r\nfunction useEditorConfigs() {\r\n  const { data, error, isPending } = useFetch(\r\n    \"https://makecode.com/editors.json\",\r\n    {\r\n      headers: { accept: \"application/json\" },\r\n    }\r\n  );\r\n  return {\r\n    editorConfigs: data as { [index: string]: EditorConfig },\r\n    error,\r\n    isPending,\r\n  };\r\n}\r\n\r\nexport function SelectMakeCodeEditor(props: {\r\n  editor: string;\r\n  dispatch: Dispatch<AppAction>;\r\n}) {\r\n  const { editor, dispatch } = props;\r\n  const { editorConfigs } = useEditorConfigs();\r\n\r\n  const options = [];\r\n  if (editorConfigs)\r\n    for (const id in editorConfigs)\r\n      options.push({ key: id, text: editorConfigs[id].name });\r\n  const onChange = (\r\n    select: FormEvent<HTMLDivElement>,\r\n    item?: IDropdownOption\r\n  ) => {\r\n    if (item?.key)\r\n      dispatch({\r\n        type: AppActionType.SET_EDITOR,\r\n        editor: item?.key,\r\n      } as SetEditorAppAction);\r\n  };\r\n  return (\r\n    <Dropdown\r\n      label={\"Choose your editor\"}\r\n      options={options}\r\n      selectedKey={editor}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function MakeCodeEditor(props: {\r\n  id: string;\r\n  editor: string;\r\n  multi?: boolean;\r\n}) {\r\n  const { editor, id, multi } = props;\r\n  const { editorConfigs, isPending } = useEditorConfigs();\r\n  if (!editorConfigs || isPending) return null;\r\n\r\n  const editorConfig = editorConfigs[editor];\r\n  if (!editorConfig) return null;\r\n\r\n  let url = `${editorConfig.url}?editorLayout=ide&nosandbox=1`;\r\n  if (multi) url += `&nestededitorsim=1`;\r\n  return <BrowserSource id={id} url={url} dataKind={\"makecode\"} />;\r\n}\r\n\r\nexport function initMakeCode() {\r\n  window.onmessage = function (msg: MessageEvent) {\r\n    const data = msg.data;\r\n    const source = msg.source;\r\n    if (!!data.broadcast) {\r\n      data.outer = true;\r\n      const frames = document.querySelectorAll(\"iframe[data-kind = makecode]\");\r\n      for (let i = 0; i < frames.length; ++i) {\r\n        const ifrm = frames[i] as HTMLIFrameElement;\r\n        if (ifrm.contentWindow && ifrm.contentWindow !== source)\r\n          ifrm.contentWindow.postMessage(data, \"*\");\r\n      }\r\n    }\r\n  };\r\n}\r\n","import {\r\n  AppState,\r\n  AppAction,\r\n  SetFlagAppAction,\r\n  AppActionType,\r\n  SetTextAppAction,\r\n} from \"./App\";\r\nimport { Dispatch, ReactNode } from \"react\";\r\nimport React from \"react\";\r\nimport Source from \"./Source\";\r\nimport { VideoInputSelect } from \"./VideoInputSource\";\r\nimport { Checkbox, Button, TextField } from \"@fluentui/react\";\r\nimport { SelectMakeCodeEditor } from \"./MakeCodeEditor\";\r\n\r\nexport default function Settings(props: {\r\n  state: AppState;\r\n  dispatch: Dispatch<AppAction>;\r\n}) {\r\n  const { state, dispatch } = props;\r\n  return (\r\n    <Source id=\"settings\">\r\n      <Button\r\n        id=\"settingsclose\"\r\n        onClick={() =>\r\n          dispatch({\r\n            type: AppActionType.SET_SETTINGS,\r\n            on: false,\r\n          } as SetFlagAppAction)\r\n        }\r\n      >\r\n        close\r\n      </Button>\r\n      <h2>MakeCode Streamer settings</h2>\r\n      <Field>\r\n        <SelectMakeCodeEditor editor={state.editor} dispatch={dispatch} />\r\n      </Field>\r\n      <Field>\r\n        <DispatchCheckbox\r\n          label=\"Multi editors\"\r\n          checked={state.multi}\r\n          action={AppActionType.SET_MULTI}\r\n        />\r\n      </Field>\r\n      <h2>Video</h2>\r\n      <Field>\r\n        <Label text={\"Face cameras\"} />\r\n        <VideoInputSelect\r\n          current={state.faceCamId}\r\n          action={AppActionType.SET_FACECAM_ID}\r\n          dispatch={dispatch}\r\n        />\r\n      </Field>\r\n      <Field>\r\n        <Label text={\"Hardware camera\"} />\r\n        <VideoInputSelect\r\n          current={state.hardwareCamId}\r\n          action={AppActionType.SET_HARDWARECAM_ID}\r\n          dispatch={dispatch}\r\n        />\r\n      </Field>\r\n      <h2>Paint</h2>\r\n      <Field>\r\n        <DispatchText\r\n          label={\"Emojis (😄🤔😭👀)\"}\r\n          placeholder=\"Emojis\"\r\n          action={AppActionType.SET_EMOJIS}\r\n          current={state.emojis}\r\n        />\r\n      </Field>\r\n      <h2>Streaming chats</h2>\r\n      <Field>\r\n        <DispatchText\r\n          label={\"Mixer\"}\r\n          placeholder=\"Mixer.com account (/account)\"\r\n          action={AppActionType.SET_MIXER}\r\n          current={state.mixer}\r\n        />\r\n      </Field>\r\n      <Field>\r\n        <DispatchText\r\n          label={\"Twitch\"}\r\n          placeholder=\"Twitch.tv account (/account)\"\r\n          action={AppActionType.SET_TWITCH}\r\n          current={state.twitch}\r\n        />\r\n      </Field>\r\n    </Source>\r\n  );\r\n\r\n  /*\r\n            <Field>\r\n                <input type=\"checkbox\" id=\"facerotatecameracheckbox\"></input>\r\n                <label for=\"facerotatecameracheckbox\">Rotate camera 180</label>\r\n            </Field>\r\n            <Field>\r\n                <input type=\"checkbox\" id=\"hardwarerotatecameracheckbox\"></input>\r\n                <label for=\"hardwarerotatecameracheckbox\">Rotate camera 180</label>\r\n            </Field>\r\n            <h2>Social accounts</h2>\r\n            <Field>\r\n                <label for=\"twitterinput\">Twitter (optional)</label>\r\n                <input id=\"twitterinput\" placeholder=\"Twitter handle (@account)\" />\r\n            </Field>\r\n    */\r\n\r\n  function Field(props: { children: ReactNode }) {\r\n    return <div className=\"field\">{props.children}</div>;\r\n  }\r\n\r\n  function DispatchText(props: {\r\n    label: string;\r\n    placeholder: string;\r\n    action:\r\n      | AppActionType.SET_EMOJIS\r\n      | AppActionType.SET_MIXER\r\n      | AppActionType.SET_TWITCH;\r\n    current?: string;\r\n  }) {\r\n    const { label, placeholder, action, current } = props;\r\n    return (\r\n      <TextField\r\n        label={label}\r\n        placeholder={placeholder}\r\n        onChange={(e, newValue) =>\r\n          dispatch({ type: action, text: newValue } as SetTextAppAction)\r\n        }\r\n        value={current || \"\"}\r\n      />\r\n    );\r\n  }\r\n\r\n  function Label(props: { text: string }) {\r\n    return <label>{props.text}</label>;\r\n  }\r\n\r\n  function DispatchCheckbox(props: {\r\n    label: string;\r\n    checked?: boolean;\r\n    action: AppActionType.SET_MULTI;\r\n  }) {\r\n    const { label, checked, action } = props;\r\n    return (\r\n      <Checkbox\r\n        label={label}\r\n        checked={checked}\r\n        onChange={() =>\r\n          dispatch({ type: action, on: !checked } as SetFlagAppAction)\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport BrowserSource from \"./BrowserSource\";\r\n\r\nexport default function Chat(props: { mixer?: string; twitch?: string }) {\r\n  const { mixer, twitch } = props;\r\n  let url = undefined;\r\n  if (mixer) url = `https://mixer.com/embed/chat/${mixer}?composer=false`;\r\n  else if (twitch)\r\n    url = `https://www.twitch.tv/embed/${twitch}/chat?parent=${window.location.host}`;\r\n\r\n  if (!url) return null; // nothing to see here\r\n\r\n  return <BrowserSource id=\"chat\" sandbox={true} url={url} />;\r\n}\r\n","import { Fragment, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { AppState } from \"./App\";\r\n\r\nexport default function Paint(props: { state: AppState }) {\r\n  const { state } = props;\r\n  const paintRef = React.useRef<HTMLCanvasElement>(null);\r\n  const paintToolRef = React.useRef<HTMLCanvasElement>(null);\r\n  let paint: HTMLCanvasElement;\r\n  let painttool: HTMLCanvasElement;\r\n  let paintCtx: CanvasRenderingContext2D;\r\n  let painttoolCtx: CanvasRenderingContext2D;\r\n  const mouse = { x: 0, y: 0 };\r\n  let head = { x: 0, y: 0 };\r\n\r\n  useEffect(() => init());\r\n\r\n  return (\r\n    <Fragment>\r\n      <canvas ref={paintRef} id=\"paint\"></canvas>\r\n      <canvas ref={paintToolRef} id=\"painttool\"></canvas>\r\n    </Fragment>\r\n  );\r\n\r\n  function init() {\r\n    if (paint) return;\r\n    if (paintRef.current) {\r\n      paint = paintRef.current;\r\n      paintCtx = paint.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n    if (paintToolRef.current) {\r\n      painttool = paintToolRef.current;\r\n      painttoolCtx = painttool.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n    loadPaint();\r\n    clearPaint();\r\n  }\r\n\r\n  function clearPaint() {\r\n    // console.log('clear paint')\r\n    paintCtx.clearRect(0, 0, paint.width, paint.height);\r\n    painttoolCtx.clearRect(0, 0, paint.width, paint.height);\r\n  }\r\n\r\n  function updateSize() {\r\n    const size = paint.getBoundingClientRect();\r\n    // console.log(`paint down ${size.width} ${size.height}`)\r\n    paint.width = size.width;\r\n    paint.height = size.height;\r\n    painttool.width = size.width;\r\n    painttool.height = size.height;\r\n  }\r\n\r\n  function loadPaint() {\r\n    window.addEventListener(\"resize\", updateSize, false);\r\n    updateSize();\r\n    painttool.addEventListener(\r\n      \"mousemove\",\r\n      function (e) {\r\n        mouse.x = e.pageX - this.offsetLeft;\r\n        mouse.y = e.pageY - this.offsetTop;\r\n      },\r\n      false\r\n    );\r\n\r\n    painttool.addEventListener(\r\n      \"mousedown\",\r\n      function (e) {\r\n        head.x = e.pageX - this.offsetLeft;\r\n        head.y = e.pageY - this.offsetTop;\r\n        painttoolCtx.lineWidth = Math.max(10, (paint.width / 100) | 0);\r\n        painttoolCtx.lineJoin = \"round\";\r\n        painttoolCtx.lineCap = \"round\";\r\n        painttoolCtx.strokeStyle = \"#ffe135\";\r\n        if (state.paintTool === \"pen\") {\r\n          painttoolCtx.beginPath();\r\n          painttoolCtx.moveTo(mouse.x, mouse.y);\r\n        }\r\n        painttool.addEventListener(\"mousemove\", onPaint, false);\r\n      },\r\n      false\r\n    );\r\n\r\n    painttool.addEventListener(\r\n      \"mouseup\",\r\n      function () {\r\n        // console.log(`paint up`)\r\n        paintCtx.drawImage(painttool, 0, 0);\r\n        painttoolCtx.clearRect(0, 0, painttool.width, painttool.height);\r\n        painttool.removeEventListener(\"mousemove\", onPaint, false);\r\n      },\r\n      false\r\n    );\r\n\r\n    function onPaint() {\r\n      const ctx = painttoolCtx;\r\n      ctx.clearRect(0, 0, painttool.width, painttool.height);\r\n      ctx.save();\r\n      if (state.paintTool === \"arrow\") {\r\n        const p1 = mouse,\r\n          p2 = head;\r\n        const size = ctx.lineWidth * 2;\r\n        // Rotate the context to point along the path\r\n        const dx = p2.x - p1.x;\r\n        const dy = p2.y - p1.y;\r\n        const len = Math.sqrt(dx * dx + dy * dy);\r\n        ctx.translate(p2.x, p2.y);\r\n        ctx.rotate(Math.atan2(dy, dx));\r\n\r\n        // line\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(-len, 0);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        // arrowhead\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(-size, -size);\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(-size, size);\r\n        ctx.stroke();\r\n      } else if (state.paintTool === \"rect\") {\r\n        ctx.beginPath();\r\n        ctx.rect(head.x, head.y, mouse.x - head.x, mouse.y - head.y);\r\n        ctx.stroke();\r\n      } else if (state.paintTool === \"pen\") {\r\n        ctx.lineTo(mouse.x, mouse.y);\r\n        ctx.stroke();\r\n      } else if (state.paintTool === \"emoji\") {\r\n        const p1 = mouse,\r\n          p2 = head;\r\n        const dx = p2.x - p1.x;\r\n        const dy = p2.y - p1.y;\r\n        const len = Math.max(64, (Math.sqrt(dx * dx + dy * dy) * 0.9) | 0);\r\n        ctx.translate(p2.x, p2.y);\r\n        ctx.rotate(Math.atan2(dy, dx) - Math.PI / 2);\r\n\r\n        ctx.font = `${len}px serif`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(state.emoji || \"\", 0, 0);\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n}\r\n","import React, { useReducer, useEffect, Dispatch } from \"react\";\r\nimport \"./index.css\";\r\nimport \"./theme.css\";\r\nimport Scene from \"./Scene\";\r\nimport VideoInputSource, { listCameras } from \"./VideoInputSource\";\r\nimport Source from \"./Source\";\r\nimport Toolbox from \"./Toolbox\";\r\nimport Settings from \"./Settings\";\r\nimport { useLocalStorage } from \"./Hooks\";\r\nimport MakeCodeEditor, { initMakeCode } from \"./MakeCodeEditor\";\r\nimport Chat from \"./Chat\";\r\nimport Paint from \"./Paint\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\n\r\nexport interface AppState {\r\n  editor: string;\r\n  mixer?: string;\r\n  twitch?: string;\r\n  emojis?: string;\r\n  scene: string;\r\n  faceCamId?: string;\r\n  hardwareCamId?: string;\r\n  multi?: boolean;\r\n  hardware?: boolean;\r\n  settings?: boolean;\r\n  chat?: boolean;\r\n  paint?: boolean;\r\n  paintTool?: string;\r\n  emoji?: string;\r\n}\r\n\r\nexport interface EditorConfig {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\nexport enum AppActionType {\r\n  \"SET_SCENE\",\r\n  \"SET_FACECAM_ID\",\r\n  \"SET_HARDWARECAM_ID\",\r\n  \"SET_HARDWARECAM\",\r\n  \"SET_MULTI\",\r\n  \"SET_SETTINGS\",\r\n  \"SET_MIXER\",\r\n  \"SET_TWITCH\",\r\n  \"SET_EMOJIS\",\r\n  \"SET_EDITOR\",\r\n  \"SET_CHAT\",\r\n  \"SET_PAINT\",\r\n  \"SET_PAINT_TOOL\",\r\n}\r\n\r\nexport interface AppAction {\r\n  type: AppActionType;\r\n}\r\n\r\nexport interface SetEditorAppAction extends AppAction {\r\n  type: AppActionType.SET_EDITOR;\r\n  editor: string;\r\n}\r\n\r\nexport interface SetSceneAppAction extends AppAction {\r\n  type: AppActionType.SET_SCENE;\r\n  scene: string;\r\n}\r\n\r\nexport interface SetTextAppAction extends AppAction {\r\n  type: AppActionType.SET_TWITCH | AppActionType.SET_MULTI;\r\n  text: string;\r\n}\r\n\r\nexport interface SetCameraDeviceIdAppAction extends AppAction {\r\n  type: AppActionType.SET_FACECAM_ID | AppActionType.SET_HARDWARECAM_ID;\r\n  deviceId: string;\r\n}\r\n\r\nexport interface SetFlagAppAction extends AppAction {\r\n  type:\r\n    | AppActionType.SET_MULTI\r\n    | AppActionType.SET_HARDWARECAM\r\n    | AppActionType.SET_SETTINGS\r\n    | AppActionType.SET_EMOJIS\r\n    | AppActionType.SET_CHAT\r\n    | AppActionType.SET_PAINT;\r\n  on: boolean;\r\n}\r\n\r\nexport interface SetPaintToolAppAction extends AppAction {\r\n  type: AppActionType.SET_PAINT_TOOL;\r\n  tool: string;\r\n  emoji?: string;\r\n}\r\n\r\n/*\r\n  left: false,\r\n  chat: false,\r\n  hardware: false,\r\n  painttool: \"arrow\",\r\n  faceCamId: \"\",\r\n  hardwareCamId: \"\"\r\n*/\r\n\r\nfunction useConfig(): [AppState, (cfg: AppState) => void] {\r\n  return useLocalStorage(\"streamer.config\", {\r\n    editor: \"microbit\",\r\n    scene: \"left\",\r\n  });\r\n}\r\n\r\nasync function findCamera(dispatch: Dispatch<AppAction>) {\r\n  console.log(\"looking for web cam\");\r\n  const cams = await listCameras();\r\n  if (cams && cams[0] && cams[0].deviceId) {\r\n    dispatch({\r\n      type: AppActionType.SET_FACECAM_ID,\r\n      deviceId: cams[0].deviceId,\r\n    } as SetCameraDeviceIdAppAction);\r\n  }\r\n}\r\n\r\ninitializeIcons();\r\ninitMakeCode();\r\n\r\nexport default function App() {\r\n  const [config, setConfig] = useConfig();\r\n  const [state, dispatch] = useReducer(reducer, config);\r\n\r\n  useEffect(() => {\r\n    if (!state.faceCamId) findCamera(dispatch);\r\n  });\r\n\r\n  return (\r\n    <Scene state={state}>\r\n      <MakeCodeEditor id=\"editor\" editor={config.editor} multi={state.multi} />\r\n      {state.multi && (\r\n        <MakeCodeEditor\r\n          id=\"editor2\"\r\n          editor={config.editor}\r\n          multi={state.multi}\r\n        />\r\n      )}\r\n      <Chat mixer={config.mixer} twitch={config.twitch} />\r\n      <VideoInputSource id=\"facecam\" deviceId={state.faceCamId} />\r\n      {state.hardwareCamId && (\r\n        <VideoInputSource id=\"hardwarecam\" deviceId={state.hardwareCamId} />\r\n      )}\r\n      {state.paint && <Paint state={state} />}\r\n      <Source id=\"social\">\r\n        <Toolbox state={state} dispatch={dispatch} />\r\n        <div id=\"banner\"></div>\r\n      </Source>\r\n      {state.settings && <Settings state={state} dispatch={dispatch} />}\r\n    </Scene>\r\n  );\r\n\r\n  function reducer(state: AppState, action: AppAction) {\r\n    const newState = cloneState(state);\r\n    switch (action.type) {\r\n      case AppActionType.SET_EDITOR:\r\n        newState.editor = (action as SetEditorAppAction).editor;\r\n        break;\r\n      case AppActionType.SET_SCENE:\r\n        newState.scene = (action as SetSceneAppAction).scene;\r\n        break;\r\n      case AppActionType.SET_FACECAM_ID:\r\n        newState.faceCamId = (action as SetCameraDeviceIdAppAction).deviceId;\r\n        break;\r\n      case AppActionType.SET_HARDWARECAM_ID:\r\n        newState.hardwareCamId = (action as SetCameraDeviceIdAppAction).deviceId;\r\n        break;\r\n      case AppActionType.SET_MULTI:\r\n        newState.multi = !!(action as SetFlagAppAction).on;\r\n        break;\r\n      case AppActionType.SET_HARDWARECAM:\r\n        newState.hardware = !!(action as SetFlagAppAction).on;\r\n        break;\r\n      case AppActionType.SET_SETTINGS:\r\n        newState.settings = !!(action as SetFlagAppAction).on;\r\n        break;\r\n      case AppActionType.SET_MIXER:\r\n        newState.mixer = (action as SetTextAppAction).text;\r\n        break;\r\n      case AppActionType.SET_TWITCH:\r\n        newState.twitch = (action as SetTextAppAction).text;\r\n        break;\r\n      case AppActionType.SET_EMOJIS:\r\n        newState.emojis = (action as SetTextAppAction).text;\r\n        break;\r\n      case AppActionType.SET_CHAT:\r\n        newState.chat = (action as SetFlagAppAction).on;\r\n        break;\r\n      case AppActionType.SET_PAINT:\r\n        newState.paint = (action as SetFlagAppAction).on;\r\n        break;\r\n      case AppActionType.SET_PAINT_TOOL:\r\n        const tool = action as SetPaintToolAppAction;\r\n        newState.paintTool = tool.tool;\r\n        if (tool.emoji) newState.emoji = tool.emoji;\r\n        break;\r\n    }\r\n    setConfig(newState);\r\n    return newState;\r\n  }\r\n\r\n  function cloneState(state: AppState): AppState {\r\n    return JSON.parse(JSON.stringify(state));\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useLocalStorage<T>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, (val: T) => void] {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n  const setValue = (value: any) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}